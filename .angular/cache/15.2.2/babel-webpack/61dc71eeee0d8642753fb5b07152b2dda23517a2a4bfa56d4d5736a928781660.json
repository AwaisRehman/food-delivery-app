{"ast":null,"code":"import { sample_foods, sample_tags } from 'src/data';\nimport * as i0 from \"@angular/core\";\nexport class FoodService {\n  constructor() {}\n  getAll() {\n    return sample_foods;\n  }\n  getAllFoodsBySearchTerm(searchTerm) {\n    return this.getAll().filter(food => food.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }\n  getAllTags() {\n    return sample_tags;\n  }\n  getAllFoodsByTag(tag) {\n    return tag == \"All\" ? this.getAll() : this.getAll().filter(food => food.tags?.includes(tag));\n  }\n  getFoodById(foodId) {\n    return this.getAll().find(food => food.id);\n  }\n}\nFoodService.ɵfac = function FoodService_Factory(t) {\n  return new (t || FoodService)();\n};\nFoodService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FoodService,\n  factory: FoodService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,WAAW,QAAQ,UAAU;;AAOpD,OAAM,MAAOC,WAAW;EAEtBC,eAAgB;EAChBC,MAAM;IACJ,OAAOJ,YAAY;EACrB;EAEAK,uBAAuB,CAACC,UAAiB;IAEvC,OAAO,IAAI,CAACF,MAAM,EAAE,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACL,UAAU,CAACI,WAAW,EAAE,CAAC,CAAC;EACjG;EAEAE,UAAU;IACR,OAAOX,WAAW;EACpB;EAEAY,gBAAgB,CAACC,GAAU;IACzB,OAAOA,GAAG,IAAI,KAAK,GACnB,IAAI,CAACV,MAAM,EAAE,GACb,IAAI,CAACA,MAAM,EAAE,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACO,IAAI,EAAEJ,QAAQ,CAACG,GAAG,CAAC,CAAC;EACxD;EAGAE,WAAW,CAACC,MAAa;IACvB,OAAO,IAAI,CAACb,MAAM,EAAE,CAACc,IAAI,CAACV,IAAI,IAAIA,IAAI,CAACW,EAAE,CAAC;EAE5C;;AA1BWjB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["sample_foods","sample_tags","FoodService","constructor","getAll","getAllFoodsBySearchTerm","searchTerm","filter","food","name","toLowerCase","includes","getAllTags","getAllFoodsByTag","tag","tags","getFoodById","foodId","find","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\awais\\OneDrive\\Documents\\portfolio\\foodmine\\frontend\\src\\app\\services\\food.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { sample_foods, sample_tags } from 'src/data';\nimport { Food } from '../shared/models/Food';\nimport { Tag } from '../shared/models/Tag';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodService {\n\n  constructor() { }\n  getAll():Food[]{\n    return sample_foods\n  }\n\n  getAllFoodsBySearchTerm(searchTerm:string){\n\n    return this.getAll().filter(food => food.name.toLowerCase().includes(searchTerm.toLowerCase()))\n  }\n\n  getAllTags():Tag[]{\n    return sample_tags\n  }\n\n  getAllFoodsByTag(tag:string):Food[]{\n    return tag == \"All\"?\n    this.getAll():\n    this.getAll().filter(food => food.tags?.includes(tag))\n  }\n\n\n  getFoodById(foodId:string):Food{\n    return this.getAll().find(food => food.id)\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}